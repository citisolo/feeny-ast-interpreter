Interpret program:
defn copy-array (dst, src, i, n) : (var j = 0 while j.lt(n) : (dst.set(i.add(j), src.get(i.add(j))) j = j.add(1)) dst) defn max (a, b) : (if a.lt(b) : (b) else : (a)) defn ensure-capacity (v, c) : (var n = v.array.length() if n.lt(c) : (var sz = max(c, n.mul(2)) var a = array(sz, 0) copy-array(a, v.array, 0, v.size) v.array = a) else : (null)) defn vector () : (object : (var array = array(4, 0) var size = 0 method add (x) : (ensure-capacity(this, this.size.add(1)) this.array.set(this.size, x) this.size = this.size.add(1)) method get (i) : (this.array.get(i)) method set (i, x) : (if i.eq(this.size) : (this.add(x)) else : (this.array.set(i, x))) method length () : (this.size) method print () : (if this.size.eq(0) : (printf("[]")) else : (printf("[~", this.array.get(0)) var i = 1 while i.lt(this.size) : (printf(", ~", this.array.get(i)) i = i.add(1)) printf("]"))))) defn main () : (printf("Create empty vector.\n") var v = vector() v.print() printf("\n") printf("Add some elements.\n") v.add(2) v.add(10) v.add(22) v.add(17) v.add(23) v.add(2) v.add(7) v.print() printf("\n") printf("Retrieving some elements.\n") printf("v[~] = ~.\n", 2, v.get(2)) printf("v[~] = ~.\n", 4, v.get(4)) printf("v[~] = ~.\n", 1, v.get(1)) printf("Setting first 3 elements to 0.\n") v.set(0, 0) v.set(1, 0) v.set(2, 0) v.print() printf("\n")) main()
